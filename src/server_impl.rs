use std::collections::HashMap;
use std::hash::{Hash, Hasher};
use std::pin::Pin;
use std::sync::Arc;
use std::time::Instant;

use futures::{Stream, StreamExt};
use tokio::sync::mpsc;
use tonic::transport::Server;
use tonic::{Request, Response, Status};

// service.proto : generated by code
use ulz_proto::game_duel_service_server::{
    GameDuelService, GameDuelServiceServer
};

// Data.proto
use ulz_proto::{
    PlayerSide, EventCardType, EventCardPos, RangeType,
    GameDataSet,CharCardSet, CharCardEquSet, EventCard,
    SkillSet, SkillCardCond, SignEq, StatusSet, StatusEffect,
    EffectResult, 
};

// EventHookPhase.proto
use ulz_proto::{
    EventHookPhase, EventHookType
};

// message.proto
use ulz_proto::{
    EcShortHand, GdCreateReq, GdGetInfoReq, GdBroadcastResp,
    GdInstanceDt,GdMoveConfirmReq,GdMoveConfirmResp,GdadConfirmReq,
    GdadResultResp, GdadDiceResult, GdPhaseConfirmReq, GdPhaseConfirmResp,
    GdChangeConfirmReq, CastCmd, MovePhaseOpt
}

// implement from gen-code

#[tonic::async_trait]
impl GameDuelService for GameDuelServiceServer {
   
}
