// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CastCmd int32

const (
	CastCmd_GET_EFFECT_RESULT     CastCmd = 0
	CastCmd_GET_DRAW_PHASE_RESULT CastCmd = 1
	CastCmd_GET_MOVE_PHASE_RESULT CastCmd = 2
	CastCmd_GET_ATK_PHASE_RESULT  CastCmd = 3
	CastCmd_GET_DEF_PHASE_RESULT  CastCmd = 4
)

var CastCmd_name = map[int32]string{
	0: "GET_EFFECT_RESULT",
	1: "GET_DRAW_PHASE_RESULT",
	2: "GET_MOVE_PHASE_RESULT",
	3: "GET_ATK_PHASE_RESULT",
	4: "GET_DEF_PHASE_RESULT",
}

var CastCmd_value = map[string]int32{
	"GET_EFFECT_RESULT":     0,
	"GET_DRAW_PHASE_RESULT": 1,
	"GET_MOVE_PHASE_RESULT": 2,
	"GET_ATK_PHASE_RESULT":  3,
	"GET_DEF_PHASE_RESULT":  4,
}

func (x CastCmd) String() string {
	return proto.EnumName(CastCmd_name, int32(x))
}

func (CastCmd) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

type MovePhaseOpt int32

const (
	MovePhaseOpt_FORWARD  MovePhaseOpt = 0
	MovePhaseOpt_BACKWARD MovePhaseOpt = 1
	MovePhaseOpt_STAY     MovePhaseOpt = 2
	MovePhaseOpt_CHANGE   MovePhaseOpt = 3
)

var MovePhaseOpt_name = map[int32]string{
	0: "FORWARD",
	1: "BACKWARD",
	2: "STAY",
	3: "CHANGE",
}

var MovePhaseOpt_value = map[string]int32{
	"FORWARD":  0,
	"BACKWARD": 1,
	"STAY":     2,
	"CHANGE":   3,
}

func (x MovePhaseOpt) String() string {
	return proto.EnumName(MovePhaseOpt_name, int32(x))
}

func (MovePhaseOpt) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

// Sub-helper-struct
// -------------------------------------------------------------
type ECShortHand struct {
	CardId               int32        `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	Position             EventCardPos `protobuf:"varint,2,opt,name=position,proto3,enum=ULZProto.EventCardPos" json:"position,omitempty"`
	IsInvert             bool         `protobuf:"varint,3,opt,name=isInvert,proto3" json:"isInvert,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ECShortHand) Reset()         { *m = ECShortHand{} }
func (m *ECShortHand) String() string { return proto.CompactTextString(m) }
func (*ECShortHand) ProtoMessage()    {}
func (*ECShortHand) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *ECShortHand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECShortHand.Unmarshal(m, b)
}
func (m *ECShortHand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECShortHand.Marshal(b, m, deterministic)
}
func (m *ECShortHand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECShortHand.Merge(m, src)
}
func (m *ECShortHand) XXX_Size() int {
	return xxx_messageInfo_ECShortHand.Size(m)
}
func (m *ECShortHand) XXX_DiscardUnknown() {
	xxx_messageInfo_ECShortHand.DiscardUnknown(m)
}

var xxx_messageInfo_ECShortHand proto.InternalMessageInfo

func (m *ECShortHand) GetCardId() int32 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *ECShortHand) GetPosition() EventCardPos {
	if m != nil {
		return m.Position
	}
	return EventCardPos_BLOCK
}

func (m *ECShortHand) GetIsInvert() bool {
	if m != nil {
		return m.IsInvert
	}
	return false
}

// -------------------------------------------------------------
// Create-Game Request
type GDCreateReq struct {
	RoomKey              string         `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	HostId               string         `protobuf:"bytes,2,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	DuelerId             string         `protobuf:"bytes,3,opt,name=dueler_id,json=duelerId,proto3" json:"dueler_id,omitempty"`
	Nvn                  int32          `protobuf:"varint,4,opt,name=nvn,proto3" json:"nvn,omitempty"`
	HostCardDeck         []*CharCardSet `protobuf:"bytes,5,rep,name=host_card_deck,json=hostCardDeck,proto3" json:"host_card_deck,omitempty"`
	DuelCardDeck         []*CharCardSet `protobuf:"bytes,6,rep,name=duel_card_deck,json=duelCardDeck,proto3" json:"duel_card_deck,omitempty"`
	HostExtraEc          []*EventCard   `protobuf:"bytes,7,rep,name=host_extra_ec,json=hostExtraEc,proto3" json:"host_extra_ec,omitempty"`
	DuelExtraEc          []*EventCard   `protobuf:"bytes,8,rep,name=duel_extra_ec,json=duelExtraEc,proto3" json:"duel_extra_ec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GDCreateReq) Reset()         { *m = GDCreateReq{} }
func (m *GDCreateReq) String() string { return proto.CompactTextString(m) }
func (*GDCreateReq) ProtoMessage()    {}
func (*GDCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *GDCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDCreateReq.Unmarshal(m, b)
}
func (m *GDCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDCreateReq.Marshal(b, m, deterministic)
}
func (m *GDCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDCreateReq.Merge(m, src)
}
func (m *GDCreateReq) XXX_Size() int {
	return xxx_messageInfo_GDCreateReq.Size(m)
}
func (m *GDCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GDCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_GDCreateReq proto.InternalMessageInfo

func (m *GDCreateReq) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDCreateReq) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *GDCreateReq) GetDuelerId() string {
	if m != nil {
		return m.DuelerId
	}
	return ""
}

func (m *GDCreateReq) GetNvn() int32 {
	if m != nil {
		return m.Nvn
	}
	return 0
}

func (m *GDCreateReq) GetHostCardDeck() []*CharCardSet {
	if m != nil {
		return m.HostCardDeck
	}
	return nil
}

func (m *GDCreateReq) GetDuelCardDeck() []*CharCardSet {
	if m != nil {
		return m.DuelCardDeck
	}
	return nil
}

func (m *GDCreateReq) GetHostExtraEc() []*EventCard {
	if m != nil {
		return m.HostExtraEc
	}
	return nil
}

func (m *GDCreateReq) GetDuelExtraEc() []*EventCard {
	if m != nil {
		return m.DuelExtraEc
	}
	return nil
}

// -------------------------------------------------------------
// Get-Game Request
//  **general-struct
type GDGetInfoReq struct {
	RoomKey              string         `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Side                 PlayerSide     `protobuf:"varint,2,opt,name=side,proto3,enum=ULZProto.PlayerSide" json:"side,omitempty"`
	CurrentPhase         EventHookPhase `protobuf:"varint,3,opt,name=current_phase,json=currentPhase,proto3,enum=ULZProto.EventHookPhase" json:"current_phase,omitempty"`
	IsWatcher            bool           `protobuf:"varint,4,opt,name=is_watcher,json=isWatcher,proto3" json:"is_watcher,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GDGetInfoReq) Reset()         { *m = GDGetInfoReq{} }
func (m *GDGetInfoReq) String() string { return proto.CompactTextString(m) }
func (*GDGetInfoReq) ProtoMessage()    {}
func (*GDGetInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *GDGetInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDGetInfoReq.Unmarshal(m, b)
}
func (m *GDGetInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDGetInfoReq.Marshal(b, m, deterministic)
}
func (m *GDGetInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDGetInfoReq.Merge(m, src)
}
func (m *GDGetInfoReq) XXX_Size() int {
	return xxx_messageInfo_GDGetInfoReq.Size(m)
}
func (m *GDGetInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GDGetInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GDGetInfoReq proto.InternalMessageInfo

func (m *GDGetInfoReq) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDGetInfoReq) GetSide() PlayerSide {
	if m != nil {
		return m.Side
	}
	return PlayerSide_HOST
}

func (m *GDGetInfoReq) GetCurrentPhase() EventHookPhase {
	if m != nil {
		return m.CurrentPhase
	}
	return EventHookPhase_gameset_start
}

func (m *GDGetInfoReq) GetIsWatcher() bool {
	if m != nil {
		return m.IsWatcher
	}
	return false
}

// -------------------------------------------------------------
// Server-Broadcast-Response
type GDBroadcastResp struct {
	RoomKey              string         `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Msg                  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Command              CastCmd        `protobuf:"varint,3,opt,name=command,proto3,enum=ULZProto.CastCmd" json:"command,omitempty"`
	CurrentPhase         EventHookPhase `protobuf:"varint,4,opt,name=current_phase,json=currentPhase,proto3,enum=ULZProto.EventHookPhase" json:"current_phase,omitempty"`
	PhaseHook            EventHookType  `protobuf:"varint,5,opt,name=phase_hook,json=phaseHook,proto3,enum=ULZProto.EventHookType" json:"phase_hook,omitempty"`
	PhaseAb              PlayerSide     `protobuf:"varint,6,opt,name=phase_ab,json=phaseAb,proto3,enum=ULZProto.PlayerSide" json:"phase_ab,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GDBroadcastResp) Reset()         { *m = GDBroadcastResp{} }
func (m *GDBroadcastResp) String() string { return proto.CompactTextString(m) }
func (*GDBroadcastResp) ProtoMessage()    {}
func (*GDBroadcastResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

func (m *GDBroadcastResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDBroadcastResp.Unmarshal(m, b)
}
func (m *GDBroadcastResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDBroadcastResp.Marshal(b, m, deterministic)
}
func (m *GDBroadcastResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDBroadcastResp.Merge(m, src)
}
func (m *GDBroadcastResp) XXX_Size() int {
	return xxx_messageInfo_GDBroadcastResp.Size(m)
}
func (m *GDBroadcastResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GDBroadcastResp.DiscardUnknown(m)
}

var xxx_messageInfo_GDBroadcastResp proto.InternalMessageInfo

func (m *GDBroadcastResp) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDBroadcastResp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GDBroadcastResp) GetCommand() CastCmd {
	if m != nil {
		return m.Command
	}
	return CastCmd_GET_EFFECT_RESULT
}

func (m *GDBroadcastResp) GetCurrentPhase() EventHookPhase {
	if m != nil {
		return m.CurrentPhase
	}
	return EventHookPhase_gameset_start
}

func (m *GDBroadcastResp) GetPhaseHook() EventHookType {
	if m != nil {
		return m.PhaseHook
	}
	return EventHookType_Instant
}

func (m *GDBroadcastResp) GetPhaseAb() PlayerSide {
	if m != nil {
		return m.PhaseAb
	}
	return PlayerSide_HOST
}

// -------------------------------------------------------------
// instance-set-event-card
type GDInstanceDT struct {
	RoomKey              string         `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Side                 PlayerSide     `protobuf:"varint,2,opt,name=side,proto3,enum=ULZProto.PlayerSide" json:"side,omitempty"`
	CurrentPhase         EventHookPhase `protobuf:"varint,3,opt,name=current_phase,json=currentPhase,proto3,enum=ULZProto.EventHookPhase" json:"current_phase,omitempty"`
	UpdateCard           []*ECShortHand `protobuf:"bytes,4,rep,name=update_card,json=updateCard,proto3" json:"update_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GDInstanceDT) Reset()         { *m = GDInstanceDT{} }
func (m *GDInstanceDT) String() string { return proto.CompactTextString(m) }
func (*GDInstanceDT) ProtoMessage()    {}
func (*GDInstanceDT) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{4}
}

func (m *GDInstanceDT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDInstanceDT.Unmarshal(m, b)
}
func (m *GDInstanceDT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDInstanceDT.Marshal(b, m, deterministic)
}
func (m *GDInstanceDT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDInstanceDT.Merge(m, src)
}
func (m *GDInstanceDT) XXX_Size() int {
	return xxx_messageInfo_GDInstanceDT.Size(m)
}
func (m *GDInstanceDT) XXX_DiscardUnknown() {
	xxx_messageInfo_GDInstanceDT.DiscardUnknown(m)
}

var xxx_messageInfo_GDInstanceDT proto.InternalMessageInfo

func (m *GDInstanceDT) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDInstanceDT) GetSide() PlayerSide {
	if m != nil {
		return m.Side
	}
	return PlayerSide_HOST
}

func (m *GDInstanceDT) GetCurrentPhase() EventHookPhase {
	if m != nil {
		return m.CurrentPhase
	}
	return EventHookPhase_gameset_start
}

func (m *GDInstanceDT) GetUpdateCard() []*ECShortHand {
	if m != nil {
		return m.UpdateCard
	}
	return nil
}

// -------------------------------------------------------------
// Move-Phase-Confirm Request
type GDMoveConfirmReq struct {
	RoomKey              string       `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Side                 PlayerSide   `protobuf:"varint,2,opt,name=side,proto3,enum=ULZProto.PlayerSide" json:"side,omitempty"`
	UpdateCard           []*EventCard `protobuf:"bytes,3,rep,name=update_card,json=updateCard,proto3" json:"update_card,omitempty"`
	MoveOpt              MovePhaseOpt `protobuf:"varint,4,opt,name=move_opt,json=moveOpt,proto3,enum=ULZProto.MovePhaseOpt" json:"move_opt,omitempty"`
	Point                int32        `protobuf:"varint,5,opt,name=point,proto3" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GDMoveConfirmReq) Reset()         { *m = GDMoveConfirmReq{} }
func (m *GDMoveConfirmReq) String() string { return proto.CompactTextString(m) }
func (*GDMoveConfirmReq) ProtoMessage()    {}
func (*GDMoveConfirmReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{5}
}

func (m *GDMoveConfirmReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDMoveConfirmReq.Unmarshal(m, b)
}
func (m *GDMoveConfirmReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDMoveConfirmReq.Marshal(b, m, deterministic)
}
func (m *GDMoveConfirmReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDMoveConfirmReq.Merge(m, src)
}
func (m *GDMoveConfirmReq) XXX_Size() int {
	return xxx_messageInfo_GDMoveConfirmReq.Size(m)
}
func (m *GDMoveConfirmReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GDMoveConfirmReq.DiscardUnknown(m)
}

var xxx_messageInfo_GDMoveConfirmReq proto.InternalMessageInfo

func (m *GDMoveConfirmReq) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDMoveConfirmReq) GetSide() PlayerSide {
	if m != nil {
		return m.Side
	}
	return PlayerSide_HOST
}

func (m *GDMoveConfirmReq) GetUpdateCard() []*EventCard {
	if m != nil {
		return m.UpdateCard
	}
	return nil
}

func (m *GDMoveConfirmReq) GetMoveOpt() MovePhaseOpt {
	if m != nil {
		return m.MoveOpt
	}
	return MovePhaseOpt_FORWARD
}

func (m *GDMoveConfirmReq) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

type GDMoveConfirmResp struct {
	RoomKey              string    `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	ResultRange          RangeType `protobuf:"varint,2,opt,name=result_range,json=resultRange,proto3,enum=ULZProto.RangeType" json:"result_range,omitempty"`
	HostHp               int32     `protobuf:"varint,3,opt,name=host_hp,json=hostHp,proto3" json:"host_hp,omitempty"`
	DuelHp               int32     `protobuf:"varint,4,opt,name=duel_hp,json=duelHp,proto3" json:"duel_hp,omitempty"`
	HostCurrCard         int32     `protobuf:"varint,5,opt,name=host_curr_card,json=hostCurrCard,proto3" json:"host_curr_card,omitempty"`
	DuelCurrCard         int32     `protobuf:"varint,6,opt,name=duel_curr_card,json=duelCurrCard,proto3" json:"duel_curr_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GDMoveConfirmResp) Reset()         { *m = GDMoveConfirmResp{} }
func (m *GDMoveConfirmResp) String() string { return proto.CompactTextString(m) }
func (*GDMoveConfirmResp) ProtoMessage()    {}
func (*GDMoveConfirmResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{6}
}

func (m *GDMoveConfirmResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDMoveConfirmResp.Unmarshal(m, b)
}
func (m *GDMoveConfirmResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDMoveConfirmResp.Marshal(b, m, deterministic)
}
func (m *GDMoveConfirmResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDMoveConfirmResp.Merge(m, src)
}
func (m *GDMoveConfirmResp) XXX_Size() int {
	return xxx_messageInfo_GDMoveConfirmResp.Size(m)
}
func (m *GDMoveConfirmResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GDMoveConfirmResp.DiscardUnknown(m)
}

var xxx_messageInfo_GDMoveConfirmResp proto.InternalMessageInfo

func (m *GDMoveConfirmResp) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDMoveConfirmResp) GetResultRange() RangeType {
	if m != nil {
		return m.ResultRange
	}
	return RangeType_SHORT
}

func (m *GDMoveConfirmResp) GetHostHp() int32 {
	if m != nil {
		return m.HostHp
	}
	return 0
}

func (m *GDMoveConfirmResp) GetDuelHp() int32 {
	if m != nil {
		return m.DuelHp
	}
	return 0
}

func (m *GDMoveConfirmResp) GetHostCurrCard() int32 {
	if m != nil {
		return m.HostCurrCard
	}
	return 0
}

func (m *GDMoveConfirmResp) GetDuelCurrCard() int32 {
	if m != nil {
		return m.DuelCurrCard
	}
	return 0
}

// -------------------------------------------------------------
// ATK/DEF-Phase-Confirm Request
//      Player send data
type GDADConfirmReq struct {
	RoomKey      string         `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Side         PlayerSide     `protobuf:"varint,2,opt,name=side,proto3,enum=ULZProto.PlayerSide" json:"side,omitempty"`
	CurrentPhase EventHookPhase `protobuf:"varint,3,opt,name=current_phase,json=currentPhase,proto3,enum=ULZProto.EventHookPhase" json:"current_phase,omitempty"`
	// point :  the feat-power-point
	PowPoint int32 `protobuf:"varint,4,opt,name=pow_point,json=powPoint,proto3" json:"pow_point,omitempty"`
	// skill-id : skill trigger
	//      0 / null as no skill trigger
	SkillId int32 `protobuf:"varint,5,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	// feat_id : binding function
	//      0 / null as no skill trigger
	FeatId int32 `protobuf:"varint,6,opt,name=feat_id,json=featId,proto3" json:"feat_id,omitempty"`
	// update-card : target event-card to used
	// !NOTE: suppose the card data is stored during card-move
	UpdateCard           []*EventCard `protobuf:"bytes,7,rep,name=update_card,json=updateCard,proto3" json:"update_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GDADConfirmReq) Reset()         { *m = GDADConfirmReq{} }
func (m *GDADConfirmReq) String() string { return proto.CompactTextString(m) }
func (*GDADConfirmReq) ProtoMessage()    {}
func (*GDADConfirmReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{7}
}

func (m *GDADConfirmReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDADConfirmReq.Unmarshal(m, b)
}
func (m *GDADConfirmReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDADConfirmReq.Marshal(b, m, deterministic)
}
func (m *GDADConfirmReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDADConfirmReq.Merge(m, src)
}
func (m *GDADConfirmReq) XXX_Size() int {
	return xxx_messageInfo_GDADConfirmReq.Size(m)
}
func (m *GDADConfirmReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GDADConfirmReq.DiscardUnknown(m)
}

var xxx_messageInfo_GDADConfirmReq proto.InternalMessageInfo

func (m *GDADConfirmReq) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDADConfirmReq) GetSide() PlayerSide {
	if m != nil {
		return m.Side
	}
	return PlayerSide_HOST
}

func (m *GDADConfirmReq) GetCurrentPhase() EventHookPhase {
	if m != nil {
		return m.CurrentPhase
	}
	return EventHookPhase_gameset_start
}

func (m *GDADConfirmReq) GetPowPoint() int32 {
	if m != nil {
		return m.PowPoint
	}
	return 0
}

func (m *GDADConfirmReq) GetSkillId() int32 {
	if m != nil {
		return m.SkillId
	}
	return 0
}

func (m *GDADConfirmReq) GetFeatId() int32 {
	if m != nil {
		return m.FeatId
	}
	return 0
}

func (m *GDADConfirmReq) GetUpdateCard() []*EventCard {
	if m != nil {
		return m.UpdateCard
	}
	return nil
}

// ATK/DEF-Phase-Result Response
type GDADResultResp struct {
	RoomKey      string         `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Side         PlayerSide     `protobuf:"varint,2,opt,name=side,proto3,enum=ULZProto.PlayerSide" json:"side,omitempty"`
	CurrentPhase EventHookPhase `protobuf:"varint,3,opt,name=current_phase,json=currentPhase,proto3,enum=ULZProto.EventHookPhase" json:"current_phase,omitempty"`
	// total Atk / Def Point after feat-func
	Point                int32    `protobuf:"varint,4,opt,name=point,proto3" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GDADResultResp) Reset()         { *m = GDADResultResp{} }
func (m *GDADResultResp) String() string { return proto.CompactTextString(m) }
func (*GDADResultResp) ProtoMessage()    {}
func (*GDADResultResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{8}
}

func (m *GDADResultResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDADResultResp.Unmarshal(m, b)
}
func (m *GDADResultResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDADResultResp.Marshal(b, m, deterministic)
}
func (m *GDADResultResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDADResultResp.Merge(m, src)
}
func (m *GDADResultResp) XXX_Size() int {
	return xxx_messageInfo_GDADResultResp.Size(m)
}
func (m *GDADResultResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GDADResultResp.DiscardUnknown(m)
}

var xxx_messageInfo_GDADResultResp proto.InternalMessageInfo

func (m *GDADResultResp) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDADResultResp) GetSide() PlayerSide {
	if m != nil {
		return m.Side
	}
	return PlayerSide_HOST
}

func (m *GDADResultResp) GetCurrentPhase() EventHookPhase {
	if m != nil {
		return m.CurrentPhase
	}
	return EventHookPhase_gameset_start
}

func (m *GDADResultResp) GetPoint() int32 {
	if m != nil {
		return m.Point
	}
	return 0
}

// ATK/DEF-Phase-DiceSet Response
type GDADDiceResult struct {
	RoomKey              string         `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Turns                int32          `protobuf:"varint,2,opt,name=turns,proto3" json:"turns,omitempty"`
	CurrentPhase         EventHookPhase `protobuf:"varint,3,opt,name=current_phase,json=currentPhase,proto3,enum=ULZProto.EventHookPhase" json:"current_phase,omitempty"`
	PhaseAb              PlayerSide     `protobuf:"varint,4,opt,name=phase_ab,json=phaseAb,proto3,enum=ULZProto.PlayerSide" json:"phase_ab,omitempty"`
	AtkSide              PlayerSide     `protobuf:"varint,5,opt,name=atk_side,json=atkSide,proto3,enum=ULZProto.PlayerSide" json:"atk_side,omitempty"`
	AtkPoint             int32          `protobuf:"varint,6,opt,name=atk_point,json=atkPoint,proto3" json:"atk_point,omitempty"`
	AtkSkillId           []int32        `protobuf:"varint,7,rep,packed,name=atk_skill_id,json=atkSkillId,proto3" json:"atk_skill_id,omitempty"`
	DefSide              PlayerSide     `protobuf:"varint,8,opt,name=def_side,json=defSide,proto3,enum=ULZProto.PlayerSide" json:"def_side,omitempty"`
	DefPoint             int32          `protobuf:"varint,9,opt,name=def_point,json=defPoint,proto3" json:"def_point,omitempty"`
	DefSkillId           []int32        `protobuf:"varint,10,rep,packed,name=def_skill_id,json=defSkillId,proto3" json:"def_skill_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GDADDiceResult) Reset()         { *m = GDADDiceResult{} }
func (m *GDADDiceResult) String() string { return proto.CompactTextString(m) }
func (*GDADDiceResult) ProtoMessage()    {}
func (*GDADDiceResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{9}
}

func (m *GDADDiceResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDADDiceResult.Unmarshal(m, b)
}
func (m *GDADDiceResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDADDiceResult.Marshal(b, m, deterministic)
}
func (m *GDADDiceResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDADDiceResult.Merge(m, src)
}
func (m *GDADDiceResult) XXX_Size() int {
	return xxx_messageInfo_GDADDiceResult.Size(m)
}
func (m *GDADDiceResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GDADDiceResult.DiscardUnknown(m)
}

var xxx_messageInfo_GDADDiceResult proto.InternalMessageInfo

func (m *GDADDiceResult) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDADDiceResult) GetTurns() int32 {
	if m != nil {
		return m.Turns
	}
	return 0
}

func (m *GDADDiceResult) GetCurrentPhase() EventHookPhase {
	if m != nil {
		return m.CurrentPhase
	}
	return EventHookPhase_gameset_start
}

func (m *GDADDiceResult) GetPhaseAb() PlayerSide {
	if m != nil {
		return m.PhaseAb
	}
	return PlayerSide_HOST
}

func (m *GDADDiceResult) GetAtkSide() PlayerSide {
	if m != nil {
		return m.AtkSide
	}
	return PlayerSide_HOST
}

func (m *GDADDiceResult) GetAtkPoint() int32 {
	if m != nil {
		return m.AtkPoint
	}
	return 0
}

func (m *GDADDiceResult) GetAtkSkillId() []int32 {
	if m != nil {
		return m.AtkSkillId
	}
	return nil
}

func (m *GDADDiceResult) GetDefSide() PlayerSide {
	if m != nil {
		return m.DefSide
	}
	return PlayerSide_HOST
}

func (m *GDADDiceResult) GetDefPoint() int32 {
	if m != nil {
		return m.DefPoint
	}
	return 0
}

func (m *GDADDiceResult) GetDefSkillId() []int32 {
	if m != nil {
		return m.DefSkillId
	}
	return nil
}

// -------------------------------------------------------------
//
type GDPhaseConfirmReq struct {
	RoomKey              string         `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Side                 PlayerSide     `protobuf:"varint,2,opt,name=side,proto3,enum=ULZProto.PlayerSide" json:"side,omitempty"`
	CurrentPhase         EventHookPhase `protobuf:"varint,3,opt,name=current_phase,json=currentPhase,proto3,enum=ULZProto.EventHookPhase" json:"current_phase,omitempty"`
	PhaseHook            EventHookType  `protobuf:"varint,4,opt,name=phase_hook,json=phaseHook,proto3,enum=ULZProto.EventHookType" json:"phase_hook,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GDPhaseConfirmReq) Reset()         { *m = GDPhaseConfirmReq{} }
func (m *GDPhaseConfirmReq) String() string { return proto.CompactTextString(m) }
func (*GDPhaseConfirmReq) ProtoMessage()    {}
func (*GDPhaseConfirmReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{10}
}

func (m *GDPhaseConfirmReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDPhaseConfirmReq.Unmarshal(m, b)
}
func (m *GDPhaseConfirmReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDPhaseConfirmReq.Marshal(b, m, deterministic)
}
func (m *GDPhaseConfirmReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDPhaseConfirmReq.Merge(m, src)
}
func (m *GDPhaseConfirmReq) XXX_Size() int {
	return xxx_messageInfo_GDPhaseConfirmReq.Size(m)
}
func (m *GDPhaseConfirmReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GDPhaseConfirmReq.DiscardUnknown(m)
}

var xxx_messageInfo_GDPhaseConfirmReq proto.InternalMessageInfo

func (m *GDPhaseConfirmReq) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDPhaseConfirmReq) GetSide() PlayerSide {
	if m != nil {
		return m.Side
	}
	return PlayerSide_HOST
}

func (m *GDPhaseConfirmReq) GetCurrentPhase() EventHookPhase {
	if m != nil {
		return m.CurrentPhase
	}
	return EventHookPhase_gameset_start
}

func (m *GDPhaseConfirmReq) GetPhaseHook() EventHookType {
	if m != nil {
		return m.PhaseHook
	}
	return EventHookType_Instant
}

type GDPhaseConfirmResp struct {
	RoomKey              string   `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GDPhaseConfirmResp) Reset()         { *m = GDPhaseConfirmResp{} }
func (m *GDPhaseConfirmResp) String() string { return proto.CompactTextString(m) }
func (*GDPhaseConfirmResp) ProtoMessage()    {}
func (*GDPhaseConfirmResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{11}
}

func (m *GDPhaseConfirmResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDPhaseConfirmResp.Unmarshal(m, b)
}
func (m *GDPhaseConfirmResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDPhaseConfirmResp.Marshal(b, m, deterministic)
}
func (m *GDPhaseConfirmResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDPhaseConfirmResp.Merge(m, src)
}
func (m *GDPhaseConfirmResp) XXX_Size() int {
	return xxx_messageInfo_GDPhaseConfirmResp.Size(m)
}
func (m *GDPhaseConfirmResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GDPhaseConfirmResp.DiscardUnknown(m)
}

var xxx_messageInfo_GDPhaseConfirmResp proto.InternalMessageInfo

func (m *GDPhaseConfirmResp) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

// -------------------------------------------------------------
//
type GDChangeConfirmReq struct {
	RoomKey              string     `protobuf:"bytes,1,opt,name=room_key,json=roomKey,proto3" json:"room_key,omitempty"`
	Side                 PlayerSide `protobuf:"varint,2,opt,name=side,proto3,enum=ULZProto.PlayerSide" json:"side,omitempty"`
	CardNum              int32      `protobuf:"varint,3,opt,name=card_num,json=cardNum,proto3" json:"card_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GDChangeConfirmReq) Reset()         { *m = GDChangeConfirmReq{} }
func (m *GDChangeConfirmReq) String() string { return proto.CompactTextString(m) }
func (*GDChangeConfirmReq) ProtoMessage()    {}
func (*GDChangeConfirmReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{12}
}

func (m *GDChangeConfirmReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDChangeConfirmReq.Unmarshal(m, b)
}
func (m *GDChangeConfirmReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDChangeConfirmReq.Marshal(b, m, deterministic)
}
func (m *GDChangeConfirmReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDChangeConfirmReq.Merge(m, src)
}
func (m *GDChangeConfirmReq) XXX_Size() int {
	return xxx_messageInfo_GDChangeConfirmReq.Size(m)
}
func (m *GDChangeConfirmReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GDChangeConfirmReq.DiscardUnknown(m)
}

var xxx_messageInfo_GDChangeConfirmReq proto.InternalMessageInfo

func (m *GDChangeConfirmReq) GetRoomKey() string {
	if m != nil {
		return m.RoomKey
	}
	return ""
}

func (m *GDChangeConfirmReq) GetSide() PlayerSide {
	if m != nil {
		return m.Side
	}
	return PlayerSide_HOST
}

func (m *GDChangeConfirmReq) GetCardNum() int32 {
	if m != nil {
		return m.CardNum
	}
	return 0
}

func init() {
	proto.RegisterEnum("ULZProto.CastCmd", CastCmd_name, CastCmd_value)
	proto.RegisterEnum("ULZProto.MovePhaseOpt", MovePhaseOpt_name, MovePhaseOpt_value)
	proto.RegisterType((*ECShortHand)(nil), "ULZProto.ECShortHand")
	proto.RegisterType((*GDCreateReq)(nil), "ULZProto.GDCreateReq")
	proto.RegisterType((*GDGetInfoReq)(nil), "ULZProto.GDGetInfoReq")
	proto.RegisterType((*GDBroadcastResp)(nil), "ULZProto.GDBroadcastResp")
	proto.RegisterType((*GDInstanceDT)(nil), "ULZProto.GDInstanceDT")
	proto.RegisterType((*GDMoveConfirmReq)(nil), "ULZProto.GDMoveConfirmReq")
	proto.RegisterType((*GDMoveConfirmResp)(nil), "ULZProto.GDMoveConfirmResp")
	proto.RegisterType((*GDADConfirmReq)(nil), "ULZProto.GDADConfirmReq")
	proto.RegisterType((*GDADResultResp)(nil), "ULZProto.GDADResultResp")
	proto.RegisterType((*GDADDiceResult)(nil), "ULZProto.GDADDiceResult")
	proto.RegisterType((*GDPhaseConfirmReq)(nil), "ULZProto.GDPhaseConfirmReq")
	proto.RegisterType((*GDPhaseConfirmResp)(nil), "ULZProto.GDPhaseConfirmResp")
	proto.RegisterType((*GDChangeConfirmReq)(nil), "ULZProto.GDChangeConfirmReq")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 1087 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4f, 0x6f, 0x23, 0x35,
	0x14, 0xdf, 0xfc, 0x9f, 0xbc, 0x64, 0x4b, 0x6a, 0xba, 0x6c, 0xda, 0x0a, 0xa9, 0x1a, 0x71, 0xa8,
	0x16, 0xa9, 0x15, 0x05, 0x95, 0x03, 0x42, 0x28, 0xcd, 0x4c, 0x93, 0xa8, 0xed, 0x36, 0x72, 0x52,
	0x2a, 0x7a, 0x19, 0xb9, 0x33, 0x4e, 0x33, 0x4a, 0x33, 0x1e, 0x3c, 0x4e, 0x4a, 0xbf, 0x02, 0x37,
	0xc4, 0x91, 0x6f, 0xb0, 0x37, 0xbe, 0x06, 0x17, 0x6e, 0x9c, 0x38, 0xf2, 0x41, 0xd0, 0xb3, 0x27,
	0xd9, 0xb4, 0x2c, 0xd9, 0xa2, 0xad, 0xd0, 0xde, 0xfc, 0xfc, 0xde, 0xcf, 0xef, 0xdf, 0xcf, 0xcf,
	0x86, 0xa7, 0x63, 0x9e, 0x24, 0xec, 0x8a, 0xef, 0xc4, 0x52, 0x28, 0x41, 0xac, 0xb3, 0xe3, 0x8b,
	0x2e, 0xae, 0x36, 0xd6, 0xdc, 0x29, 0x8f, 0x54, 0x5b, 0x88, 0x51, 0x77, 0xc8, 0x92, 0x54, 0xbf,
	0x01, 0x0e, 0x53, 0xcc, 0xac, 0xed, 0x29, 0x54, 0xdc, 0x66, 0x6f, 0x28, 0xa4, 0x6a, 0xb3, 0x28,
	0x20, 0xcf, 0xa1, 0xe4, 0x33, 0x19, 0x78, 0x61, 0x50, 0xcf, 0x6c, 0x65, 0xb6, 0x0b, 0xb4, 0x88,
	0x62, 0x27, 0x20, 0x7b, 0x60, 0xc5, 0x22, 0x09, 0x55, 0x28, 0xa2, 0x7a, 0x76, 0x2b, 0xb3, 0xbd,
	0xb2, 0xf7, 0xd1, 0xce, 0xcc, 0xcd, 0x8e, 0xf6, 0xd2, 0x64, 0x32, 0xe8, 0x8a, 0x84, 0xce, 0xed,
	0xc8, 0x06, 0x58, 0x61, 0xd2, 0x89, 0xa6, 0x5c, 0xaa, 0x7a, 0x6e, 0x2b, 0xb3, 0x6d, 0xd1, 0xb9,
	0x6c, 0xff, 0x99, 0x85, 0x4a, 0xcb, 0x69, 0x4a, 0xce, 0x14, 0xa7, 0xfc, 0x7b, 0xb2, 0x0e, 0x96,
	0x14, 0x62, 0xec, 0x8d, 0xf8, 0xad, 0xf6, 0x5c, 0xa6, 0x25, 0x94, 0x8f, 0xf8, 0x2d, 0xc6, 0x34,
	0x14, 0x89, 0xc2, 0x98, 0xb2, 0x5a, 0x53, 0x44, 0xb1, 0x13, 0x90, 0x4d, 0x28, 0x07, 0x13, 0x7e,
	0xcd, 0x25, 0xaa, 0x72, 0x5a, 0x65, 0x99, 0x8d, 0x4e, 0x40, 0x6a, 0x90, 0x8b, 0xa6, 0x51, 0x3d,
	0xaf, 0xb3, 0xc0, 0x25, 0xf9, 0x0a, 0x56, 0xf4, 0x39, 0x3a, 0xc1, 0x80, 0xfb, 0xa3, 0x7a, 0x61,
	0x2b, 0xb7, 0x5d, 0xd9, 0x7b, 0xf6, 0x3a, 0x91, 0xe6, 0x90, 0x49, 0xcc, 0xa3, 0xc7, 0x15, 0xad,
	0xa2, 0x31, 0x0a, 0x0e, 0xf7, 0x47, 0x08, 0xc6, 0xa3, 0x17, 0xc0, 0xc5, 0xa5, 0x60, 0x34, 0x9e,
	0x83, 0xbf, 0x84, 0xa7, 0xda, 0x33, 0xff, 0x41, 0x49, 0xe6, 0x71, 0xbf, 0x5e, 0xd2, 0xd8, 0x0f,
	0xdf, 0x50, 0x41, 0x5a, 0x41, 0x4b, 0x17, 0x0d, 0x5d, 0x1f, 0x81, 0xda, 0xeb, 0x1c, 0x68, 0x2d,
	0x01, 0xa2, 0x65, 0x0a, 0xb4, 0x7f, 0xcd, 0x40, 0xb5, 0xe5, 0xb4, 0xb8, 0xea, 0x44, 0x03, 0xf1,
	0x96, 0xfa, 0x6e, 0x43, 0x3e, 0x09, 0x03, 0x9e, 0xb6, 0x75, 0xed, 0xf5, 0xd9, 0xdd, 0x6b, 0x76,
	0xcb, 0x65, 0x2f, 0x0c, 0x38, 0xd5, 0x16, 0xe4, 0x6b, 0x78, 0xea, 0x4f, 0xa4, 0xe4, 0x91, 0xf2,
	0x62, 0xe4, 0x93, 0x2e, 0xfa, 0xca, 0x5e, 0xfd, 0x5e, 0x38, 0x73, 0xbe, 0xd1, 0x6a, 0x6a, 0xae,
	0x25, 0xf2, 0x31, 0x40, 0x98, 0x78, 0x37, 0x4c, 0xf9, 0x43, 0x2e, 0x75, 0x67, 0x2c, 0x5a, 0x0e,
	0x93, 0x73, 0xb3, 0x61, 0xff, 0x9c, 0x85, 0x0f, 0x5a, 0xce, 0x81, 0x14, 0x2c, 0xf0, 0x59, 0xa2,
	0x28, 0x4f, 0xe2, 0x65, 0x61, 0xd7, 0x20, 0x37, 0x4e, 0xae, 0x52, 0x4a, 0xe0, 0x92, 0x7c, 0x0a,
	0x25, 0x5f, 0x8c, 0xc7, 0x2c, 0x0a, 0xd2, 0xc0, 0x56, 0x17, 0x9a, 0xc3, 0x12, 0xd5, 0x1c, 0x07,
	0x74, 0x66, 0xf1, 0xcf, 0x5c, 0xf2, 0xff, 0x29, 0x97, 0x7d, 0x00, 0x0d, 0xf3, 0x86, 0x42, 0x20,
	0x91, 0x10, 0xfb, 0xfc, 0x0d, 0xd8, 0xfe, 0x6d, 0xcc, 0x69, 0x59, 0x9b, 0xa2, 0x48, 0x76, 0xc1,
	0x32, 0x38, 0x76, 0x59, 0x2f, 0x2e, 0x29, 0x78, 0x49, 0x5b, 0x35, 0x2e, 0xed, 0xdf, 0x74, 0x27,
	0x3b, 0x51, 0xa2, 0x58, 0xe4, 0x73, 0xa7, 0xff, 0x5e, 0x74, 0x72, 0x1f, 0x2a, 0x93, 0x38, 0x60,
	0x8a, 0xeb, 0xfb, 0x50, 0xcf, 0xdf, 0xbf, 0x0a, 0x0b, 0x23, 0x85, 0x82, 0xb1, 0x44, 0x8e, 0xda,
	0x7f, 0x64, 0xa0, 0xd6, 0x72, 0x4e, 0xc4, 0x94, 0x37, 0x45, 0x34, 0x08, 0xe5, 0xf8, 0xd1, 0xa8,
	0xf9, 0xc5, 0xdd, 0x88, 0x72, 0xff, 0x7e, 0x4f, 0x16, 0xe2, 0x21, 0x9f, 0x81, 0x35, 0x16, 0x53,
	0xee, 0x89, 0x58, 0xa5, 0xfd, 0x5f, 0x98, 0x6a, 0x18, 0xa6, 0x4e, 0xf7, 0x34, 0x56, 0xb4, 0x84,
	0x76, 0xa7, 0xb1, 0x22, 0x6b, 0x50, 0x88, 0x45, 0x18, 0x29, 0xdd, 0xf3, 0x02, 0x35, 0x82, 0xfd,
	0x57, 0x06, 0x56, 0xef, 0x25, 0xb6, 0x9c, 0xbd, 0xfb, 0x50, 0x95, 0x3c, 0x99, 0x5c, 0x2b, 0x4f,
	0xb2, 0xe8, 0x6a, 0x96, 0xe1, 0x42, 0xc0, 0x14, 0xb7, 0x35, 0x7b, 0x2a, 0xc6, 0x50, 0x6f, 0xcc,
	0x87, 0xe1, 0x30, 0xd6, 0x2d, 0x2b, 0x98, 0x61, 0xd8, 0x8e, 0x51, 0xa1, 0x47, 0xc5, 0x30, 0x4e,
	0x67, 0x5e, 0x11, 0xc5, 0x76, 0x4c, 0x3e, 0x99, 0x8d, 0xbd, 0x89, 0x94, 0xa6, 0x38, 0x26, 0x72,
	0x33, 0xdf, 0x26, 0x52, 0xcf, 0x2c, 0xb4, 0x32, 0xf3, 0x6d, 0x6e, 0x55, 0x34, 0x56, 0x7a, 0x90,
	0xa5, 0x56, 0xf6, 0x2f, 0x59, 0x58, 0x69, 0x39, 0x0d, 0xe7, 0xb1, 0xbb, 0xf7, 0x8e, 0x74, 0xdc,
	0x84, 0x72, 0x2c, 0x6e, 0x3c, 0xd3, 0x17, 0x93, 0xbd, 0x15, 0x8b, 0x9b, 0x2e, 0xca, 0x18, 0x60,
	0x32, 0x0a, 0xaf, 0xaf, 0xf1, 0x91, 0x30, 0x99, 0x97, 0xb4, 0xdc, 0xd1, 0xaf, 0xdd, 0x80, 0x33,
	0xfd, 0xb2, 0x98, 0x6c, 0x8b, 0x28, 0x76, 0x82, 0xfb, 0x6c, 0x2a, 0x3d, 0x88, 0x4d, 0xf6, 0xab,
	0x8c, 0xa9, 0x0e, 0x35, 0xfd, 0x7a, 0x0b, 0x03, 0xfe, 0xb7, 0xea, 0xcc, 0x19, 0x9b, 0x5f, 0x64,
	0xec, 0x4f, 0x39, 0x13, 0xac, 0x13, 0xfa, 0xdc, 0x04, 0xbc, 0x2c, 0xd8, 0x35, 0x28, 0xa8, 0x89,
	0x8c, 0x12, 0x1d, 0x6d, 0x81, 0x1a, 0xe1, 0x5d, 0x03, 0x5b, 0x9c, 0x85, 0xf9, 0x07, 0xcc, 0x42,
	0x04, 0x30, 0x35, 0xf2, 0x74, 0xd9, 0x0a, 0xcb, 0x00, 0x4c, 0x8d, 0x70, 0x81, 0xc4, 0x40, 0x80,
	0x49, 0xdf, 0xb4, 0x18, 0x4f, 0x30, 0xc4, 0xd8, 0x82, 0xaa, 0x3e, 0x6d, 0x46, 0x0e, 0xec, 0x72,
	0x81, 0x02, 0x62, 0x53, 0x7e, 0xec, 0x82, 0x15, 0xf0, 0x81, 0xf1, 0x67, 0x2d, 0xf3, 0x17, 0xf0,
	0xc1, 0xcc, 0x1f, 0x02, 0x8c, 0xbf, 0xb2, 0xf1, 0x17, 0xf0, 0xc1, 0xdc, 0x9f, 0x3e, 0x6d, 0xe6,
	0x0f, 0x8c, 0x3f, 0xc4, 0x1a, 0x7f, 0xf6, 0xef, 0x7a, 0x8a, 0xe8, 0xe2, 0xbc, 0x67, 0x37, 0xec,
	0xee, 0x73, 0x97, 0x7f, 0xe8, 0x73, 0x67, 0xef, 0x02, 0xb9, 0x9f, 0xd0, 0xd2, 0x5b, 0x61, 0x2b,
	0x04, 0x34, 0x87, 0x38, 0xeb, 0x1e, 0xbb, 0x04, 0xeb, 0x60, 0xe9, 0xdf, 0x5b, 0x34, 0x19, 0xa7,
	0xb3, 0x53, 0xff, 0x75, 0x5f, 0x4e, 0xc6, 0x2f, 0x7e, 0xcc, 0x40, 0x29, 0xfd, 0x21, 0x90, 0x67,
	0xb0, 0xda, 0x72, 0xfb, 0x9e, 0x7b, 0x78, 0xe8, 0x36, 0xfb, 0x1e, 0x75, 0x7b, 0x67, 0xc7, 0xfd,
	0xda, 0x13, 0xb2, 0x0e, 0xcf, 0x70, 0xdb, 0xa1, 0x8d, 0x73, 0xaf, 0xdb, 0x6e, 0xf4, 0xdc, 0x99,
	0x2a, 0x33, 0x53, 0x9d, 0x9c, 0x7e, 0xeb, 0xde, 0x55, 0x65, 0x49, 0x1d, 0xd6, 0x50, 0xd5, 0xe8,
	0x1f, 0xdd, 0xd5, 0xe4, 0x66, 0x1a, 0xc7, 0x3d, 0xbc, 0xab, 0xc9, 0xbf, 0xf8, 0x06, 0xaa, 0x8b,
	0x4f, 0x0f, 0xa9, 0x40, 0xe9, 0xf0, 0x94, 0x9e, 0x37, 0xa8, 0x53, 0x7b, 0x42, 0xaa, 0x60, 0x1d,
	0x34, 0x9a, 0x47, 0x5a, 0xca, 0x10, 0x0b, 0xf2, 0xbd, 0x7e, 0xe3, 0xbb, 0x5a, 0x96, 0x00, 0x14,
	0x9b, 0xed, 0xc6, 0xcb, 0x96, 0x5b, 0xcb, 0x1d, 0x6c, 0x5e, 0x14, 0xf4, 0xe7, 0xfe, 0x55, 0x76,
	0xf5, 0xec, 0xf8, 0xa2, 0x91, 0x24, 0x5c, 0xed, 0xe8, 0x9a, 0x9c, 0x88, 0xe0, 0xb2, 0xa8, 0x55,
	0x9f, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x25, 0xb1, 0x34, 0x16, 0x34, 0x0c, 0x00, 0x00,
}
