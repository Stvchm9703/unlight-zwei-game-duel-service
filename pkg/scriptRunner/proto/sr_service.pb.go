// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.10.0
// source: sr_service.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_sr_service_proto protoreflect.FileDescriptor

var file_sr_service_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x73, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xa7,
	0x02, 0x0a, 0x12, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e,
	0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x12, 0x17, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x45, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x45, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x55, 0x4c,
	0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x45, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x45, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46,
	0x0a, 0x0f, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x45, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x55, 0x4c,
	0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x45, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x43,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0d, 0x44, 0x69, 0x63, 0x65, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x45, 0x44, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x55, 0x4c, 0x5a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x45, 0x44, 0x69, 0x63,
	0x65, 0x43, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x42, 0x1b, 0x5a, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0xaa, 0x02, 0x11, 0x55, 0x4c, 0x5a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_sr_service_proto_goTypes = []interface{}{
	(*SESkillCalReq)(nil),   // 0: ULZProto.SESkillCalReq
	(*SEEffectCalReq)(nil),  // 1: ULZProto.SEEffectCalReq
	(*SEDiceCalReq)(nil),    // 2: ULZProto.SEDiceCalReq
	(*SESkillCalResp)(nil),  // 3: ULZProto.SESkillCalResp
	(*SEEffectCalResp)(nil), // 4: ULZProto.SEEffectCalResp
	(*SEDiceCalResp)(nil),   // 5: ULZProto.SEDiceCalResp
}
var file_sr_service_proto_depIdxs = []int32{
	0, // 0: ULZProto.SkillEffectService.SkillInstCalc:input_type -> ULZProto.SESkillCalReq
	0, // 1: ULZProto.SkillEffectService.SkillCalculate:input_type -> ULZProto.SESkillCalReq
	1, // 2: ULZProto.SkillEffectService.EffectCalculate:input_type -> ULZProto.SEEffectCalReq
	2, // 3: ULZProto.SkillEffectService.DiceCalculate:input_type -> ULZProto.SEDiceCalReq
	3, // 4: ULZProto.SkillEffectService.SkillInstCalc:output_type -> ULZProto.SESkillCalResp
	3, // 5: ULZProto.SkillEffectService.SkillCalculate:output_type -> ULZProto.SESkillCalResp
	4, // 6: ULZProto.SkillEffectService.EffectCalculate:output_type -> ULZProto.SEEffectCalResp
	5, // 7: ULZProto.SkillEffectService.DiceCalculate:output_type -> ULZProto.SEDiceCalResp
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sr_service_proto_init() }
func file_sr_service_proto_init() {
	if File_sr_service_proto != nil {
		return
	}
	file_sr_message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sr_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sr_service_proto_goTypes,
		DependencyIndexes: file_sr_service_proto_depIdxs,
	}.Build()
	File_sr_service_proto = out.File
	file_sr_service_proto_rawDesc = nil
	file_sr_service_proto_goTypes = nil
	file_sr_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SkillEffectServiceClient is the client API for SkillEffectService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SkillEffectServiceClient interface {
	//  Basic Server Function
	SkillInstCalc(ctx context.Context, in *SESkillCalReq, opts ...grpc.CallOption) (*SESkillCalResp, error)
	SkillCalculate(ctx context.Context, in *SESkillCalReq, opts ...grpc.CallOption) (*SESkillCalResp, error)
	EffectCalculate(ctx context.Context, in *SEEffectCalReq, opts ...grpc.CallOption) (*SEEffectCalResp, error)
	DiceCalculate(ctx context.Context, in *SEDiceCalReq, opts ...grpc.CallOption) (*SEDiceCalResp, error)
}

type skillEffectServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSkillEffectServiceClient(cc grpc.ClientConnInterface) SkillEffectServiceClient {
	return &skillEffectServiceClient{cc}
}

func (c *skillEffectServiceClient) SkillInstCalc(ctx context.Context, in *SESkillCalReq, opts ...grpc.CallOption) (*SESkillCalResp, error) {
	out := new(SESkillCalResp)
	err := c.cc.Invoke(ctx, "/ULZProto.SkillEffectService/SkillInstCalc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skillEffectServiceClient) SkillCalculate(ctx context.Context, in *SESkillCalReq, opts ...grpc.CallOption) (*SESkillCalResp, error) {
	out := new(SESkillCalResp)
	err := c.cc.Invoke(ctx, "/ULZProto.SkillEffectService/SkillCalculate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skillEffectServiceClient) EffectCalculate(ctx context.Context, in *SEEffectCalReq, opts ...grpc.CallOption) (*SEEffectCalResp, error) {
	out := new(SEEffectCalResp)
	err := c.cc.Invoke(ctx, "/ULZProto.SkillEffectService/EffectCalculate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skillEffectServiceClient) DiceCalculate(ctx context.Context, in *SEDiceCalReq, opts ...grpc.CallOption) (*SEDiceCalResp, error) {
	out := new(SEDiceCalResp)
	err := c.cc.Invoke(ctx, "/ULZProto.SkillEffectService/DiceCalculate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SkillEffectServiceServer is the server API for SkillEffectService service.
type SkillEffectServiceServer interface {
	//  Basic Server Function
	SkillInstCalc(context.Context, *SESkillCalReq) (*SESkillCalResp, error)
	SkillCalculate(context.Context, *SESkillCalReq) (*SESkillCalResp, error)
	EffectCalculate(context.Context, *SEEffectCalReq) (*SEEffectCalResp, error)
	DiceCalculate(context.Context, *SEDiceCalReq) (*SEDiceCalResp, error)
}

// UnimplementedSkillEffectServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSkillEffectServiceServer struct {
}

func (*UnimplementedSkillEffectServiceServer) SkillInstCalc(context.Context, *SESkillCalReq) (*SESkillCalResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SkillInstCalc not implemented")
}
func (*UnimplementedSkillEffectServiceServer) SkillCalculate(context.Context, *SESkillCalReq) (*SESkillCalResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SkillCalculate not implemented")
}
func (*UnimplementedSkillEffectServiceServer) EffectCalculate(context.Context, *SEEffectCalReq) (*SEEffectCalResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EffectCalculate not implemented")
}
func (*UnimplementedSkillEffectServiceServer) DiceCalculate(context.Context, *SEDiceCalReq) (*SEDiceCalResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiceCalculate not implemented")
}

func RegisterSkillEffectServiceServer(s *grpc.Server, srv SkillEffectServiceServer) {
	s.RegisterService(&_SkillEffectService_serviceDesc, srv)
}

func _SkillEffectService_SkillInstCalc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SESkillCalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkillEffectServiceServer).SkillInstCalc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.SkillEffectService/SkillInstCalc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkillEffectServiceServer).SkillInstCalc(ctx, req.(*SESkillCalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkillEffectService_SkillCalculate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SESkillCalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkillEffectServiceServer).SkillCalculate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.SkillEffectService/SkillCalculate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkillEffectServiceServer).SkillCalculate(ctx, req.(*SESkillCalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkillEffectService_EffectCalculate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SEEffectCalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkillEffectServiceServer).EffectCalculate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.SkillEffectService/EffectCalculate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkillEffectServiceServer).EffectCalculate(ctx, req.(*SEEffectCalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkillEffectService_DiceCalculate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SEDiceCalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkillEffectServiceServer).DiceCalculate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ULZProto.SkillEffectService/DiceCalculate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkillEffectServiceServer).DiceCalculate(ctx, req.(*SEDiceCalReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SkillEffectService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ULZProto.SkillEffectService",
	HandlerType: (*SkillEffectServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SkillInstCalc",
			Handler:    _SkillEffectService_SkillInstCalc_Handler,
		},
		{
			MethodName: "SkillCalculate",
			Handler:    _SkillEffectService_SkillCalculate_Handler,
		},
		{
			MethodName: "EffectCalculate",
			Handler:    _SkillEffectService_EffectCalculate_Handler,
		},
		{
			MethodName: "DiceCalculate",
			Handler:    _SkillEffectService_DiceCalculate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sr_service.proto",
}
